/*******************************************************************************
 * Copyright (C) 2024 MINRES Technologies GmbH
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 *******************************************************************************/

#ifndef _RV64GCV_H_
#define _RV64GCV_H_
// clang-format off
#include <array>
#include <iss/arch/traits.h>
#include <iss/arch_if.h>
#include <iss/vm_if.h>

namespace iss {
namespace arch {

struct rv64gcv: public arch_if {

    using reg_t = uint64_t;

    using virt_addr_t = iss::virt_addr_t;

    using phys_addr_t = iss::phys_addr_t;

    rv64gcv();
    ~rv64gcv();

    void reset(uint64_t address=0) override;

    uint8_t* get_regs_base_ptr() override;

    inline bool should_stop() { return interrupt_sim; }

    inline uint64_t stop_code() { return interrupt_sim; }

    virtual phys_addr_t virt2phys(const iss::addr_t& addr);

    virtual iss::sync_type needed_sync() const { return iss::NO_SYNC; }


#pragma pack(push, 1)
    struct RV64GCV_regs {
        uint64_t X0 = 0;
        uint64_t X1 = 0;
        uint64_t X2 = 0;
        uint64_t X3 = 0;
        uint64_t X4 = 0;
        uint64_t X5 = 0;
        uint64_t X6 = 0;
        uint64_t X7 = 0;
        uint64_t X8 = 0;
        uint64_t X9 = 0;
        uint64_t X10 = 0;
        uint64_t X11 = 0;
        uint64_t X12 = 0;
        uint64_t X13 = 0;
        uint64_t X14 = 0;
        uint64_t X15 = 0;
        uint64_t X16 = 0;
        uint64_t X17 = 0;
        uint64_t X18 = 0;
        uint64_t X19 = 0;
        uint64_t X20 = 0;
        uint64_t X21 = 0;
        uint64_t X22 = 0;
        uint64_t X23 = 0;
        uint64_t X24 = 0;
        uint64_t X25 = 0;
        uint64_t X26 = 0;
        uint64_t X27 = 0;
        uint64_t X28 = 0;
        uint64_t X29 = 0;
        uint64_t X30 = 0;
        uint64_t X31 = 0;
        uint64_t PC = 0;
        uint64_t NEXT_PC = 0;
        uint8_t PRIV = 0;
        uint64_t DPC = 0;
        uint64_t F0 = 0;
        uint64_t F1 = 0;
        uint64_t F2 = 0;
        uint64_t F3 = 0;
        uint64_t F4 = 0;
        uint64_t F5 = 0;
        uint64_t F6 = 0;
        uint64_t F7 = 0;
        uint64_t F8 = 0;
        uint64_t F9 = 0;
        uint64_t F10 = 0;
        uint64_t F11 = 0;
        uint64_t F12 = 0;
        uint64_t F13 = 0;
        uint64_t F14 = 0;
        uint64_t F15 = 0;
        uint64_t F16 = 0;
        uint64_t F17 = 0;
        uint64_t F18 = 0;
        uint64_t F19 = 0;
        uint64_t F20 = 0;
        uint64_t F21 = 0;
        uint64_t F22 = 0;
        uint64_t F23 = 0;
        uint64_t F24 = 0;
        uint64_t F25 = 0;
        uint64_t F26 = 0;
        uint64_t F27 = 0;
        uint64_t F28 = 0;
        uint64_t F29 = 0;
        uint64_t F30 = 0;
        uint64_t F31 = 0;
        uint32_t FCSR = 0;
        uint8_t V0[64] = {0};
        uint8_t V1[64] = {0};
        uint8_t V2[64] = {0};
        uint8_t V3[64] = {0};
        uint8_t V4[64] = {0};
        uint8_t V5[64] = {0};
        uint8_t V6[64] = {0};
        uint8_t V7[64] = {0};
        uint8_t V8[64] = {0};
        uint8_t V9[64] = {0};
        uint8_t V10[64] = {0};
        uint8_t V11[64] = {0};
        uint8_t V12[64] = {0};
        uint8_t V13[64] = {0};
        uint8_t V14[64] = {0};
        uint8_t V15[64] = {0};
        uint8_t V16[64] = {0};
        uint8_t V17[64] = {0};
        uint8_t V18[64] = {0};
        uint8_t V19[64] = {0};
        uint8_t V20[64] = {0};
        uint8_t V21[64] = {0};
        uint8_t V22[64] = {0};
        uint8_t V23[64] = {0};
        uint8_t V24[64] = {0};
        uint8_t V25[64] = {0};
        uint8_t V26[64] = {0};
        uint8_t V27[64] = {0};
        uint8_t V28[64] = {0};
        uint8_t V29[64] = {0};
        uint8_t V30[64] = {0};
        uint8_t V31[64] = {0};
        uint64_t vstart = 0;
        uint64_t vxsat = 0;
        uint64_t vxrm = 0;
        uint64_t vl = 0;
        uint64_t vtype = 0;
        uint32_t trap_state = 0, pending_trap = 0;
        uint64_t icount = 0;
        uint64_t cycle = 0;
        uint64_t instret = 0;
        uint32_t instruction = 0;
        uint32_t last_branch = 0;
    } reg;
#pragma pack(pop)
    std::array<address_type, 4> addr_mode;
    
    uint64_t interrupt_sim=0;

    uint32_t get_fcsr(){return reg.FCSR;}
    void set_fcsr(uint32_t val){reg.FCSR = val;}      

    uint64_t get_vstart(){return reg.vstart;}
    void set_vstart(uint64_t val){reg.vstart = val;}
    uint64_t get_vl(){return reg.vl;}
    uint64_t get_vtype(){return reg.vtype;}
    uint64_t get_vxsat(){return reg.vxsat;}
    void set_vxsat(uint64_t val){reg.vxsat = val;}
    uint64_t get_vxrm(){return reg.vxrm;}
    void set_vxrm(uint64_t val){reg.vxrm = val;}

};

struct rv64gcv;

template <> struct traits<rv64gcv> {

    constexpr static char const* const core_type = "RV64GCV";
    
    static constexpr std::array<const char*, 106> reg_names{
        {"x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17", "x18", "x19", "x20", "x21", "x22", "x23", "x24", "x25", "x26", "x27", "x28", "x29", "x30", "x31", "pc", "next_pc", "priv", "dpc", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23", "f24", "f25", "f26", "f27", "f28", "f29", "f30", "f31", "fcsr", "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "vstart", "vxsat", "vxrm", "vl", "vtype"}};
 
    static constexpr std::array<const char*, 106> reg_aliases{
        {"zero", "ra", "sp", "gp", "tp", "t0", "t1", "t2", "s0", "s1", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "t3", "t4", "t5", "t6", "pc", "next_pc", "priv", "dpc", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23", "f24", "f25", "f26", "f27", "f28", "f29", "f30", "f31", "fcsr", "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "vstart", "vxsat", "vxrm", "vl", "vtype"}};

    enum constants {
        RV_CSR_FFLAGS=1ULL, RV_CSR_FRM=2ULL, RV_CSR_FCSR=3ULL, RV_CSR_UTVT=7ULL,
        RV_CSR_VSTART=8ULL, RV_CSR_VXSAT=9ULL, RV_CSR_VXRM=10ULL, RV_CSR_VCSR=15ULL,
        RV_CSR_SEED=21ULL, RV_CSR_UNXTI=69ULL, RV_CSR_UINTSTATUS=70ULL, RV_CSR_USCRATCHCSW=72ULL,
        RV_CSR_USCRATCHCSWL=73ULL, RV_CSR_SSTATUS=256ULL, RV_CSR_SEDELEG=258ULL, RV_CSR_SIDELEG=259ULL,
        RV_CSR_SIE=260ULL, RV_CSR_STVEC=261ULL, RV_CSR_SCOUNTEREN=262ULL, RV_CSR_STVT=263ULL,
        RV_CSR_SENVCFG=266ULL, RV_CSR_SSTATEEN0=268ULL, RV_CSR_SSTATEEN1=269ULL, RV_CSR_SSTATEEN2=270ULL,
        RV_CSR_SSTATEEN3=271ULL, RV_CSR_SSCRATCH=320ULL, RV_CSR_SEPC=321ULL, RV_CSR_SCAUSE=322ULL,
        RV_CSR_STVAL=323ULL, RV_CSR_SIP=324ULL, RV_CSR_SNXTI=325ULL, RV_CSR_SINTSTATUS=326ULL,
        RV_CSR_SSCRATCHCSW=328ULL, RV_CSR_SSCRATCHCSWL=329ULL, RV_CSR_STIMECMP=333ULL, RV_CSR_STIMECMPH=349ULL,
        RV_CSR_SATP=384ULL, RV_CSR_VSSTATUS=512ULL, RV_CSR_VSIE=516ULL, RV_CSR_VSTVEC=517ULL,
        RV_CSR_VSSCRATCH=576ULL, RV_CSR_VSEPC=577ULL, RV_CSR_VSCAUSE=578ULL, RV_CSR_VSTVAL=579ULL,
        RV_CSR_VSIP=580ULL, RV_CSR_VSTIMECMP=589ULL, RV_CSR_VSTIMECMPH=605ULL, RV_CSR_VSATP=640ULL,
        RV_CSR_MSTATUS=768ULL, RV_CSR_MISA=769ULL, RV_CSR_MEDELEG=770ULL, RV_CSR_MIDELEG=771ULL,
        RV_CSR_MIE=772ULL, RV_CSR_MTVEC=773ULL, RV_CSR_MCOUNTEREN=774ULL, RV_CSR_MTVT=775ULL,
        RV_CSR_MENVCFG=778ULL, RV_CSR_MSTATEEN0=780ULL, RV_CSR_MSTATEEN1=781ULL, RV_CSR_MSTATEEN2=782ULL,
        RV_CSR_MSTATEEN3=783ULL, RV_CSR_MSTATUSH=784ULL, RV_CSR_MENVCFGH=794ULL, RV_CSR_MSTATEEN0H=796ULL,
        RV_CSR_MSTATEEN1H=797ULL, RV_CSR_MSTATEEN2H=798ULL, RV_CSR_MSTATEEN3H=799ULL, RV_CSR_MCOUNTINHIBIT=800ULL,
        RV_CSR_MHPMEVENT3=803ULL, RV_CSR_MHPMEVENT4=804ULL, RV_CSR_MHPMEVENT5=805ULL, RV_CSR_MHPMEVENT6=806ULL,
        RV_CSR_MHPMEVENT7=807ULL, RV_CSR_MHPMEVENT8=808ULL, RV_CSR_MHPMEVENT9=809ULL, RV_CSR_MHPMEVENT10=810ULL,
        RV_CSR_MHPMEVENT11=811ULL, RV_CSR_MHPMEVENT12=812ULL, RV_CSR_MHPMEVENT13=813ULL, RV_CSR_MHPMEVENT14=814ULL,
        RV_CSR_MHPMEVENT15=815ULL, RV_CSR_MHPMEVENT16=816ULL, RV_CSR_MHPMEVENT17=817ULL, RV_CSR_MHPMEVENT18=818ULL,
        RV_CSR_MHPMEVENT19=819ULL, RV_CSR_MHPMEVENT20=820ULL, RV_CSR_MHPMEVENT21=821ULL, RV_CSR_MHPMEVENT22=822ULL,
        RV_CSR_MHPMEVENT23=823ULL, RV_CSR_MHPMEVENT24=824ULL, RV_CSR_MHPMEVENT25=825ULL, RV_CSR_MHPMEVENT26=826ULL,
        RV_CSR_MHPMEVENT27=827ULL, RV_CSR_MHPMEVENT28=828ULL, RV_CSR_MHPMEVENT29=829ULL, RV_CSR_MHPMEVENT30=830ULL,
        RV_CSR_MHPMEVENT31=831ULL, RV_CSR_MSCRATCH=832ULL, RV_CSR_MEPC=833ULL, RV_CSR_MCAUSE=834ULL,
        RV_CSR_MTVAL=835ULL, RV_CSR_MIP=836ULL, RV_CSR_MNXTI=837ULL, RV_CSR_MINTSTATUS=838ULL,
        RV_CSR_MSCRATCHCSW=840ULL, RV_CSR_MSCRATCHCSWL=841ULL, RV_CSR_MTINST=842ULL, RV_CSR_MTVAL2=843ULL,
        RV_CSR_PMPCFG0=928ULL, RV_CSR_PMPCFG1=929ULL, RV_CSR_PMPCFG2=930ULL, RV_CSR_PMPCFG3=931ULL,
        RV_CSR_PMPCFG4=932ULL, RV_CSR_PMPCFG5=933ULL, RV_CSR_PMPCFG6=934ULL, RV_CSR_PMPCFG7=935ULL,
        RV_CSR_PMPCFG8=936ULL, RV_CSR_PMPCFG9=937ULL, RV_CSR_PMPCFG10=938ULL, RV_CSR_PMPCFG11=939ULL,
        RV_CSR_PMPCFG12=940ULL, RV_CSR_PMPCFG13=941ULL, RV_CSR_PMPCFG14=942ULL, RV_CSR_PMPCFG15=943ULL,
        RV_CSR_PMPADDR0=944ULL, RV_CSR_PMPADDR1=945ULL, RV_CSR_PMPADDR2=946ULL, RV_CSR_PMPADDR3=947ULL,
        RV_CSR_PMPADDR4=948ULL, RV_CSR_PMPADDR5=949ULL, RV_CSR_PMPADDR6=950ULL, RV_CSR_PMPADDR7=951ULL,
        RV_CSR_PMPADDR8=952ULL, RV_CSR_PMPADDR9=953ULL, RV_CSR_PMPADDR10=954ULL, RV_CSR_PMPADDR11=955ULL,
        RV_CSR_PMPADDR12=956ULL, RV_CSR_PMPADDR13=957ULL, RV_CSR_PMPADDR14=958ULL, RV_CSR_PMPADDR15=959ULL,
        RV_CSR_PMPADDR16=960ULL, RV_CSR_PMPADDR17=961ULL, RV_CSR_PMPADDR18=962ULL, RV_CSR_PMPADDR19=963ULL,
        RV_CSR_PMPADDR20=964ULL, RV_CSR_PMPADDR21=965ULL, RV_CSR_PMPADDR22=966ULL, RV_CSR_PMPADDR23=967ULL,
        RV_CSR_PMPADDR24=968ULL, RV_CSR_PMPADDR25=969ULL, RV_CSR_PMPADDR26=970ULL, RV_CSR_PMPADDR27=971ULL,
        RV_CSR_PMPADDR28=972ULL, RV_CSR_PMPADDR29=973ULL, RV_CSR_PMPADDR30=974ULL, RV_CSR_PMPADDR31=975ULL,
        RV_CSR_PMPADDR32=976ULL, RV_CSR_PMPADDR33=977ULL, RV_CSR_PMPADDR34=978ULL, RV_CSR_PMPADDR35=979ULL,
        RV_CSR_PMPADDR36=980ULL, RV_CSR_PMPADDR37=981ULL, RV_CSR_PMPADDR38=982ULL, RV_CSR_PMPADDR39=983ULL,
        RV_CSR_PMPADDR40=984ULL, RV_CSR_PMPADDR41=985ULL, RV_CSR_PMPADDR42=986ULL, RV_CSR_PMPADDR43=987ULL,
        RV_CSR_PMPADDR44=988ULL, RV_CSR_PMPADDR45=989ULL, RV_CSR_PMPADDR46=990ULL, RV_CSR_PMPADDR47=991ULL,
        RV_CSR_PMPADDR48=992ULL, RV_CSR_PMPADDR49=993ULL, RV_CSR_PMPADDR50=994ULL, RV_CSR_PMPADDR51=995ULL,
        RV_CSR_PMPADDR52=996ULL, RV_CSR_PMPADDR53=997ULL, RV_CSR_PMPADDR54=998ULL, RV_CSR_PMPADDR55=999ULL,
        RV_CSR_PMPADDR56=1000ULL, RV_CSR_PMPADDR57=1001ULL, RV_CSR_PMPADDR58=1002ULL, RV_CSR_PMPADDR59=1003ULL,
        RV_CSR_PMPADDR60=1004ULL, RV_CSR_PMPADDR61=1005ULL, RV_CSR_PMPADDR62=1006ULL, RV_CSR_PMPADDR63=1007ULL,
        RV_CSR_SCONTEXT=1448ULL, RV_CSR_HSTATUS=1536ULL, RV_CSR_HEDELEG=1538ULL, RV_CSR_HIDELEG=1539ULL,
        RV_CSR_HIE=1540ULL, RV_CSR_HTIMEDELTA=1541ULL, RV_CSR_HCOUNTEREN=1542ULL, RV_CSR_HGEIE=1543ULL,
        RV_CSR_HENVCFG=1546ULL, RV_CSR_HSTATEEN0=1548ULL, RV_CSR_HSTATEEN1=1549ULL, RV_CSR_HSTATEEN2=1550ULL,
        RV_CSR_HSTATEEN3=1551ULL, RV_CSR_HTIMEDELTAH=1557ULL, RV_CSR_HENVCFGH=1562ULL, RV_CSR_HSTATEEN0H=1564ULL,
        RV_CSR_HSTATEEN1H=1565ULL, RV_CSR_HSTATEEN2H=1566ULL, RV_CSR_HSTATEEN3H=1567ULL, RV_CSR_HTVAL=1603ULL,
        RV_CSR_HIP=1604ULL, RV_CSR_HVIP=1605ULL, RV_CSR_HTINST=1610ULL, RV_CSR_HGATP=1664ULL,
        RV_CSR_HCONTEXT=1704ULL, RV_CSR_MHPMEVENT3H=1827ULL, RV_CSR_MHPMEVENT4H=1828ULL, RV_CSR_MHPMEVENT5H=1829ULL,
        RV_CSR_MHPMEVENT6H=1830ULL, RV_CSR_MHPMEVENT7H=1831ULL, RV_CSR_MHPMEVENT8H=1832ULL, RV_CSR_MHPMEVENT9H=1833ULL,
        RV_CSR_MHPMEVENT10H=1834ULL, RV_CSR_MHPMEVENT11H=1835ULL, RV_CSR_MHPMEVENT12H=1836ULL, RV_CSR_MHPMEVENT13H=1837ULL,
        RV_CSR_MHPMEVENT14H=1838ULL, RV_CSR_MHPMEVENT15H=1839ULL, RV_CSR_MHPMEVENT16H=1840ULL, RV_CSR_MHPMEVENT17H=1841ULL,
        RV_CSR_MHPMEVENT18H=1842ULL, RV_CSR_MHPMEVENT19H=1843ULL, RV_CSR_MHPMEVENT20H=1844ULL, RV_CSR_MHPMEVENT21H=1845ULL,
        RV_CSR_MHPMEVENT22H=1846ULL, RV_CSR_MHPMEVENT23H=1847ULL, RV_CSR_MHPMEVENT24H=1848ULL, RV_CSR_MHPMEVENT25H=1849ULL,
        RV_CSR_MHPMEVENT26H=1850ULL, RV_CSR_MHPMEVENT27H=1851ULL, RV_CSR_MHPMEVENT28H=1852ULL, RV_CSR_MHPMEVENT29H=1853ULL,
        RV_CSR_MHPMEVENT30H=1854ULL, RV_CSR_MHPMEVENT31H=1855ULL, RV_CSR_MSECCFG=1863ULL, RV_CSR_MSECCFGH=1879ULL,
        RV_CSR_TSELECT=1952ULL, RV_CSR_TDATA1=1953ULL, RV_CSR_TDATA2=1954ULL, RV_CSR_TDATA3=1955ULL,
        RV_CSR_TINFO=1956ULL, RV_CSR_TCONTROL=1957ULL, RV_CSR_MCONTEXT=1960ULL, RV_CSR_MSCONTEXT=1962ULL,
        RV_CSR_DCSR=1968ULL, RV_CSR_DPC=1969ULL, RV_CSR_DSCRATCH0=1970ULL, RV_CSR_DSCRATCH1=1971ULL,
        RV_CSR_MCYCLE=2816ULL, RV_CSR_MINSTRET=2818ULL, RV_CSR_MHPMCOUNTER3=2819ULL, RV_CSR_MHPMCOUNTER4=2820ULL,
        RV_CSR_MHPMCOUNTER5=2821ULL, RV_CSR_MHPMCOUNTER6=2822ULL, RV_CSR_MHPMCOUNTER7=2823ULL, RV_CSR_MHPMCOUNTER8=2824ULL,
        RV_CSR_MHPMCOUNTER9=2825ULL, RV_CSR_MHPMCOUNTER10=2826ULL, RV_CSR_MHPMCOUNTER11=2827ULL, RV_CSR_MHPMCOUNTER12=2828ULL,
        RV_CSR_MHPMCOUNTER13=2829ULL, RV_CSR_MHPMCOUNTER14=2830ULL, RV_CSR_MHPMCOUNTER15=2831ULL, RV_CSR_MHPMCOUNTER16=2832ULL,
        RV_CSR_MHPMCOUNTER17=2833ULL, RV_CSR_MHPMCOUNTER18=2834ULL, RV_CSR_MHPMCOUNTER19=2835ULL, RV_CSR_MHPMCOUNTER20=2836ULL,
        RV_CSR_MHPMCOUNTER21=2837ULL, RV_CSR_MHPMCOUNTER22=2838ULL, RV_CSR_MHPMCOUNTER23=2839ULL, RV_CSR_MHPMCOUNTER24=2840ULL,
        RV_CSR_MHPMCOUNTER25=2841ULL, RV_CSR_MHPMCOUNTER26=2842ULL, RV_CSR_MHPMCOUNTER27=2843ULL, RV_CSR_MHPMCOUNTER28=2844ULL,
        RV_CSR_MHPMCOUNTER29=2845ULL, RV_CSR_MHPMCOUNTER30=2846ULL, RV_CSR_MHPMCOUNTER31=2847ULL, RV_CSR_MCYCLEH=2944ULL,
        RV_CSR_MINSTRETH=2946ULL, RV_CSR_MHPMCOUNTER3H=2947ULL, RV_CSR_MHPMCOUNTER4H=2948ULL, RV_CSR_MHPMCOUNTER5H=2949ULL,
        RV_CSR_MHPMCOUNTER6H=2950ULL, RV_CSR_MHPMCOUNTER7H=2951ULL, RV_CSR_MHPMCOUNTER8H=2952ULL, RV_CSR_MHPMCOUNTER9H=2953ULL,
        RV_CSR_MHPMCOUNTER10H=2954ULL, RV_CSR_MHPMCOUNTER11H=2955ULL, RV_CSR_MHPMCOUNTER12H=2956ULL, RV_CSR_MHPMCOUNTER13H=2957ULL,
        RV_CSR_MHPMCOUNTER14H=2958ULL, RV_CSR_MHPMCOUNTER15H=2959ULL, RV_CSR_MHPMCOUNTER16H=2960ULL, RV_CSR_MHPMCOUNTER17H=2961ULL,
        RV_CSR_MHPMCOUNTER18H=2962ULL, RV_CSR_MHPMCOUNTER19H=2963ULL, RV_CSR_MHPMCOUNTER20H=2964ULL, RV_CSR_MHPMCOUNTER21H=2965ULL,
        RV_CSR_MHPMCOUNTER22H=2966ULL, RV_CSR_MHPMCOUNTER23H=2967ULL, RV_CSR_MHPMCOUNTER24H=2968ULL, RV_CSR_MHPMCOUNTER25H=2969ULL,
        RV_CSR_MHPMCOUNTER26H=2970ULL, RV_CSR_MHPMCOUNTER27H=2971ULL, RV_CSR_MHPMCOUNTER28H=2972ULL, RV_CSR_MHPMCOUNTER29H=2973ULL,
        RV_CSR_MHPMCOUNTER30H=2974ULL, RV_CSR_MHPMCOUNTER31H=2975ULL, RV_CSR_CYCLE=3072ULL, RV_CSR_TIME=3073ULL,
        RV_CSR_INSTRET=3074ULL, RV_CSR_HPMCOUNTER3=3075ULL, RV_CSR_HPMCOUNTER4=3076ULL, RV_CSR_HPMCOUNTER5=3077ULL,
        RV_CSR_HPMCOUNTER6=3078ULL, RV_CSR_HPMCOUNTER7=3079ULL, RV_CSR_HPMCOUNTER8=3080ULL, RV_CSR_HPMCOUNTER9=3081ULL,
        RV_CSR_HPMCOUNTER10=3082ULL, RV_CSR_HPMCOUNTER11=3083ULL, RV_CSR_HPMCOUNTER12=3084ULL, RV_CSR_HPMCOUNTER13=3085ULL,
        RV_CSR_HPMCOUNTER14=3086ULL, RV_CSR_HPMCOUNTER15=3087ULL, RV_CSR_HPMCOUNTER16=3088ULL, RV_CSR_HPMCOUNTER17=3089ULL,
        RV_CSR_HPMCOUNTER18=3090ULL, RV_CSR_HPMCOUNTER19=3091ULL, RV_CSR_HPMCOUNTER20=3092ULL, RV_CSR_HPMCOUNTER21=3093ULL,
        RV_CSR_HPMCOUNTER22=3094ULL, RV_CSR_HPMCOUNTER23=3095ULL, RV_CSR_HPMCOUNTER24=3096ULL, RV_CSR_HPMCOUNTER25=3097ULL,
        RV_CSR_HPMCOUNTER26=3098ULL, RV_CSR_HPMCOUNTER27=3099ULL, RV_CSR_HPMCOUNTER28=3100ULL, RV_CSR_HPMCOUNTER29=3101ULL,
        RV_CSR_HPMCOUNTER30=3102ULL, RV_CSR_HPMCOUNTER31=3103ULL, RV_CSR_VL=3104ULL, RV_CSR_VTYPE=3105ULL,
        RV_CSR_VLENB=3106ULL, RV_CSR_CYCLEH=3200ULL, RV_CSR_TIMEH=3201ULL, RV_CSR_INSTRETH=3202ULL,
        RV_CSR_HPMCOUNTER3H=3203ULL, RV_CSR_HPMCOUNTER4H=3204ULL, RV_CSR_HPMCOUNTER5H=3205ULL, RV_CSR_HPMCOUNTER6H=3206ULL,
        RV_CSR_HPMCOUNTER7H=3207ULL, RV_CSR_HPMCOUNTER8H=3208ULL, RV_CSR_HPMCOUNTER9H=3209ULL, RV_CSR_HPMCOUNTER10H=3210ULL,
        RV_CSR_HPMCOUNTER11H=3211ULL, RV_CSR_HPMCOUNTER12H=3212ULL, RV_CSR_HPMCOUNTER13H=3213ULL, RV_CSR_HPMCOUNTER14H=3214ULL,
        RV_CSR_HPMCOUNTER15H=3215ULL, RV_CSR_HPMCOUNTER16H=3216ULL, RV_CSR_HPMCOUNTER17H=3217ULL, RV_CSR_HPMCOUNTER18H=3218ULL,
        RV_CSR_HPMCOUNTER19H=3219ULL, RV_CSR_HPMCOUNTER20H=3220ULL, RV_CSR_HPMCOUNTER21H=3221ULL, RV_CSR_HPMCOUNTER22H=3222ULL,
        RV_CSR_HPMCOUNTER23H=3223ULL, RV_CSR_HPMCOUNTER24H=3224ULL, RV_CSR_HPMCOUNTER25H=3225ULL, RV_CSR_HPMCOUNTER26H=3226ULL,
        RV_CSR_HPMCOUNTER27H=3227ULL, RV_CSR_HPMCOUNTER28H=3228ULL, RV_CSR_HPMCOUNTER29H=3229ULL, RV_CSR_HPMCOUNTER30H=3230ULL,
        RV_CSR_HPMCOUNTER31H=3231ULL, RV_CSR_SCOUNTOVF=3488ULL, RV_CSR_HGEIP=3602ULL, RV_CSR_MVENDORID=3857ULL,
        RV_CSR_MARCHID=3858ULL, RV_CSR_MIMPID=3859ULL, RV_CSR_MHARTID=3860ULL, RV_CSR_MCONFIGPTR=3861ULL,
        RV_CAUSE_MISALIGNED_FETCH=0ULL, RV_CAUSE_FETCH_ACCESS=1ULL, RV_CAUSE_ILLEGAL_INSTRUCTION=2ULL, RV_CAUSE_BREAKPOINT=3ULL,
        RV_CAUSE_MISALIGNED_LOAD=4ULL, RV_CAUSE_LOAD_ACCESS=5ULL, RV_CAUSE_MISALIGNED_STORE=6ULL, RV_CAUSE_STORE_ACCESS=7ULL,
        RV_CAUSE_USER_ECALL=8ULL, RV_CAUSE_SUPERVISOR_ECALL=9ULL, RV_CAUSE_VIRTUAL_SUPERVISOR_ECALL=10ULL, RV_CAUSE_MACHINE_ECALL=11ULL,
        RV_CAUSE_FETCH_PAGE_FAULT=12ULL, RV_CAUSE_LOAD_PAGE_FAULT=13ULL, RV_CAUSE_STORE_PAGE_FAULT=15ULL, RV_CAUSE_FETCH_GUEST_PAGE_FAULT=20ULL,
        RV_CAUSE_LOAD_GUEST_PAGE_FAULT=21ULL, RV_CAUSE_VIRTUAL_INSTRUCTION=22ULL, RV_CAUSE_STORE_GUEST_PAGE_FAULT=23ULL, RV_MSTATUS_UIE=1ULL,
        RV_MSTATUS_SIE=2ULL, RV_MSTATUS_HIE=4ULL, RV_MSTATUS_MIE=8ULL, RV_MSTATUS_UPIE=16ULL,
        RV_MSTATUS_SPIE=32ULL, RV_MSTATUS_UBE=64ULL, RV_MSTATUS_MPIE=128ULL, RV_MSTATUS_SPP=256ULL,
        RV_MSTATUS_VS=1536ULL, RV_MSTATUS_MPP=6144ULL, RV_MSTATUS_FS=24576ULL, RV_MSTATUS_XS=98304ULL,
        RV_MSTATUS_MPRV=131072ULL, RV_MSTATUS_SUM=262144ULL, RV_MSTATUS_MXR=524288ULL, RV_MSTATUS_TVM=1048576ULL,
        RV_MSTATUS_TW=2097152ULL, RV_MSTATUS_TSR=4194304ULL, RV_MSTATUS32_SD=2147483648ULL, RV_MSTATUS_UXL=12884901888ULL,
        RV_MSTATUS_SXL=51539607552ULL, RV_MSTATUS_SBE=68719476736ULL, RV_MSTATUS_MBE=137438953472ULL, RV_MSTATUS_GVA=274877906944ULL,
        RV_MSTATUS_MPV=549755813888ULL, RV_MSTATUS64_SD=9223372036854775808ULL, RV_PRV_U=0ULL, RV_PRV_S=1ULL,
        RV_PRV_H=2ULL, RV_PRV_M=3ULL, RV_IRQ_U_SOFT=0ULL, RV_IRQ_S_SOFT=1ULL,
        RV_IRQ_VS_SOFT=2ULL, RV_IRQ_M_SOFT=3ULL, RV_IRQ_U_TIMER=4ULL, RV_IRQ_S_TIMER=5ULL,
        RV_IRQ_VS_TIMER=6ULL, RV_IRQ_M_TIMER=7ULL, RV_IRQ_U_EXT=8ULL, RV_IRQ_S_EXT=9ULL,
        RV_IRQ_VS_EXT=10ULL, RV_IRQ_M_EXT=11ULL, RV_IRQ_S_GEXT=12ULL, RV_IRQ_COP=12ULL,
        RV_IRQ_LCOF=13ULL, RV_MIP_USIP=1ULL, RV_MIP_SSIP=1ULL, RV_MIP_VSSIP=1ULL,
        RV_MIP_MSIP=1ULL, RV_MIP_UTIP=1ULL, RV_MIP_STIP=1ULL, RV_MIP_VSTIP=1ULL,
        RV_MIP_MTIP=1ULL, RV_MIP_UEIP=1ULL, RV_MIP_SEIP=1ULL, RV_MIP_VSEIP=1ULL,
        RV_MIP_MEIP=1ULL, RV_MIP_SGEIP=1ULL, RV_MIP_LCOFIP=1ULL, XLEN=64ULL,
        FLEN=64ULL, INSTR_ALIGNMENT=2ULL, RFS=32ULL, fence=0ULL,
        fencei=1ULL, fencevma=2ULL, CSR_SIZE=4096ULL, MUL_LEN=128ULL,
        FFLAG_MASK=31ULL, VLEN=512ULL, ELEN=64ULL, EEW_MAX=64ULL,
        FP_SEW_MIN=32ULL, FP_SEW_MAX=64ULL, VSTART_ADDR=8ULL, VXSAT_ADDR=9ULL,
        VXRM_ADDR=10ULL, VCSR_ADDR=15ULL, VL_ADDR=3104ULL, VTYPE_ADDR=3105ULL,
        VLENB_ADDR=3106ULL, MISA_VAL=9223372036854780205ULL, MARCHID_VAL=0ULL, CLIC_NUM_IRQ=0ULL
    };

    constexpr static unsigned FP_REGS_SIZE = 64;
    constexpr static unsigned V_REGS_SIZE = 512;


    enum reg_e {
        X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X25, X26, X27, X28, X29, X30, X31, PC, NEXT_PC, PRIV, DPC, F0, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, F13, F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24, F25, F26, F27, F28, F29, F30, F31, FCSR, V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, vstart, vxsat, vxrm, vl, vtype, NUM_REGS, TRAP_STATE=NUM_REGS, PENDING_TRAP, ICOUNT, CYCLE, INSTRET, INSTRUCTION, LAST_BRANCH
    };

    using reg_t = uint64_t;

    using addr_t = uint64_t;

    using code_word_t = uint64_t; //TODO: check removal

    using virt_addr_t = iss::virt_addr_t;

    using phys_addr_t = iss::phys_addr_t;

    static constexpr std::array<const uint32_t, 113> reg_bit_widths{{
        sizeof(rv64gcv::RV64GCV_regs::X0) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X1) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X2) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X3) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X4) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X5) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X6) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X7) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X8) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X9) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X10) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X11) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X12) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X13) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X14) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X15) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X16) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X17) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X18) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X19) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X20) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X21) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X22) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X23) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X24) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X25) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X26) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X27) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X28) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X29) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X30) * 8,
        sizeof(rv64gcv::RV64GCV_regs::X31) * 8,
        sizeof(rv64gcv::RV64GCV_regs::PC) * 8,
        sizeof(rv64gcv::RV64GCV_regs::NEXT_PC) * 8,
        sizeof(rv64gcv::RV64GCV_regs::PRIV) * 8,
        sizeof(rv64gcv::RV64GCV_regs::DPC) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F0) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F1) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F2) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F3) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F4) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F5) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F6) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F7) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F8) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F9) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F10) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F11) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F12) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F13) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F14) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F15) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F16) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F17) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F18) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F19) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F20) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F21) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F22) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F23) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F24) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F25) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F26) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F27) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F28) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F29) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F30) * 8,
        sizeof(rv64gcv::RV64GCV_regs::F31) * 8,
        sizeof(rv64gcv::RV64GCV_regs::FCSR) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V0) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V1) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V2) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V3) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V4) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V5) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V6) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V7) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V8) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V9) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V10) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V11) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V12) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V13) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V14) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V15) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V16) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V17) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V18) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V19) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V20) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V21) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V22) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V23) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V24) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V25) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V26) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V27) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V28) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V29) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V30) * 8,
        sizeof(rv64gcv::RV64GCV_regs::V31) * 8,
        sizeof(rv64gcv::RV64GCV_regs::vstart) * 8,
        sizeof(rv64gcv::RV64GCV_regs::vxsat) * 8,
        sizeof(rv64gcv::RV64GCV_regs::vxrm) * 8,
        sizeof(rv64gcv::RV64GCV_regs::vl) * 8,
        sizeof(rv64gcv::RV64GCV_regs::vtype) * 8,
        sizeof(rv64gcv::RV64GCV_regs::trap_state) * 8,
        sizeof(rv64gcv::RV64GCV_regs::pending_trap) * 8,
        sizeof(rv64gcv::RV64GCV_regs::icount) * 8,
        sizeof(rv64gcv::RV64GCV_regs::cycle) * 8,
        sizeof(rv64gcv::RV64GCV_regs::instret) * 8,
        sizeof(rv64gcv::RV64GCV_regs::instruction) * 8,
        sizeof(rv64gcv::RV64GCV_regs::last_branch) * 8,
    }};

    static constexpr std::array<const uint32_t, 113> reg_byte_offsets{{
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X0),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X1),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X2),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X3),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X4),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X5),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X6),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X7),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X8),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X9),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X10),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X11),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X12),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X13),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X14),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X15),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X16),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X17),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X18),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X19),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X20),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X21),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X22),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X23),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X24),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X25),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X26),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X27),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X28),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X29),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X30),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::X31),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::PC),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::NEXT_PC),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::PRIV),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::DPC),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F0),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F1),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F2),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F3),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F4),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F5),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F6),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F7),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F8),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F9),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F10),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F11),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F12),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F13),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F14),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F15),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F16),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F17),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F18),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F19),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F20),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F21),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F22),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F23),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F24),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F25),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F26),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F27),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F28),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F29),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F30),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::F31),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::FCSR),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V0),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V1),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V2),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V3),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V4),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V5),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V6),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V7),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V8),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V9),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V10),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V11),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V12),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V13),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V14),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V15),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V16),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V17),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V18),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V19),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V20),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V21),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V22),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V23),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V24),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V25),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V26),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V27),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V28),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V29),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V30),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::V31),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::vstart),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::vxsat),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::vxrm),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::vl),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::vtype),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::trap_state),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::pending_trap),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::icount),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::cycle),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::instret),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::instruction),
        offsetof(rv64gcv::RV64GCV_regs, rv64gcv::RV64GCV_regs::last_branch),
    }};

    static const uint64_t addr_mask = (reg_t(1) << (XLEN - 1)) | ((reg_t(1) << (XLEN - 1)) - 1);

    enum sreg_flag_e { FLAGS };

    enum mem_type_e { MEM, FENCE, RES, CSR, IMEM = MEM };
    
    enum class opcode_e {
        LUI = 0,
        AUIPC = 1,
        JAL = 2,
        JALR = 3,
        BEQ = 4,
        BNE = 5,
        BLT = 6,
        BGE = 7,
        BLTU = 8,
        BGEU = 9,
        LB = 10,
        LH = 11,
        LW = 12,
        LBU = 13,
        LHU = 14,
        SB = 15,
        SH = 16,
        SW = 17,
        ADDI = 18,
        SLTI = 19,
        SLTIU = 20,
        XORI = 21,
        ORI = 22,
        ANDI = 23,
        SLLI = 24,
        SRLI = 25,
        SRAI = 26,
        ADD = 27,
        SUB = 28,
        SLL = 29,
        SLT = 30,
        SLTU = 31,
        XOR = 32,
        SRL = 33,
        SRA = 34,
        OR = 35,
        AND = 36,
        FENCE = 37,
        ECALL = 38,
        EBREAK = 39,
        MRET = 40,
        WFI = 41,
        LWU = 42,
        LD = 43,
        SD = 44,
        ADDIW = 45,
        SLLIW = 46,
        SRLIW = 47,
        SRAIW = 48,
        ADDW = 49,
        SUBW = 50,
        SLLW = 51,
        SRLW = 52,
        SRAW = 53,
        CSRRW = 54,
        CSRRS = 55,
        CSRRC = 56,
        CSRRWI = 57,
        CSRRSI = 58,
        CSRRCI = 59,
        FENCE_I = 60,
        MUL = 61,
        MULH = 62,
        MULHSU = 63,
        MULHU = 64,
        DIV = 65,
        DIVU = 66,
        REM = 67,
        REMU = 68,
        MULW = 69,
        DIVW = 70,
        DIVUW = 71,
        REMW = 72,
        REMUW = 73,
        LRW = 74,
        SCW = 75,
        AMOSWAPW = 76,
        AMOADDW = 77,
        AMOXORW = 78,
        AMOANDW = 79,
        AMOORW = 80,
        AMOMINW = 81,
        AMOMAXW = 82,
        AMOMINUW = 83,
        AMOMAXUW = 84,
        LRD = 85,
        SCD = 86,
        AMOSWAPD = 87,
        AMOADDD = 88,
        AMOXORD = 89,
        AMOANDD = 90,
        AMOORD = 91,
        AMOMIND = 92,
        AMOMAXD = 93,
        AMOMINUD = 94,
        AMOMAXUD = 95,
        C__ADDI4SPN = 96,
        C__LW = 97,
        C__LD = 98,
        C__SW = 99,
        C__SD = 100,
        C__ADDI = 101,
        C__NOP = 102,
        C__ADDIW = 103,
        C__LI = 104,
        C__LUI = 105,
        C__ADDI16SP = 106,
        __reserved_clui = 107,
        C__SRLI = 108,
        C__SRAI = 109,
        C__ANDI = 110,
        C__SUB = 111,
        C__XOR = 112,
        C__OR = 113,
        C__AND = 114,
        C__SUBW = 115,
        C__ADDW = 116,
        C__J = 117,
        C__BEQZ = 118,
        C__BNEZ = 119,
        C__SLLI = 120,
        C__LWSP = 121,
        C__LDSP = 122,
        C__MV = 123,
        C__JR = 124,
        __reserved_cmv = 125,
        C__ADD = 126,
        C__JALR = 127,
        C__EBREAK = 128,
        C__SWSP = 129,
        C__SDSP = 130,
        DII = 131,
        FLW = 132,
        FSW = 133,
        FADD__S = 134,
        FSUB__S = 135,
        FMUL__S = 136,
        FDIV__S = 137,
        FMIN__S = 138,
        FMAX__S = 139,
        FSQRT__S = 140,
        FMADD__S = 141,
        FMSUB__S = 142,
        FNMADD__S = 143,
        FNMSUB__S = 144,
        FCVT__W__S = 145,
        FCVT__WU__S = 146,
        FCVT__L__S = 147,
        FCVT__LU__S = 148,
        FCVT__S__W = 149,
        FCVT__S__WU = 150,
        FCVT__S__L = 151,
        FCVT__S__LU = 152,
        FSGNJ__S = 153,
        FSGNJN__S = 154,
        FSGNJX__S = 155,
        FMV__X__W = 156,
        FMV__W__X = 157,
        FEQ__S = 158,
        FLT__S = 159,
        FLE__S = 160,
        FCLASS__S = 161,
        FLD = 162,
        FSD = 163,
        FADD__D = 164,
        FSUB__D = 165,
        FMUL__D = 166,
        FDIV__D = 167,
        FMIN__D = 168,
        FMAX__D = 169,
        FSQRT__D = 170,
        FMADD__D = 171,
        FMSUB__D = 172,
        FNMADD__D = 173,
        FNMSUB__D = 174,
        FCVT__W__D = 175,
        FCVT__WU__D = 176,
        FCVT__L__D = 177,
        FCVT__LU__D = 178,
        FCVT__D__W = 179,
        FCVT__D__WU = 180,
        FCVT__D__L = 181,
        FCVT__D__LU = 182,
        FCVT__S__D = 183,
        FCVT__D__S = 184,
        FSGNJ__D = 185,
        FSGNJN__D = 186,
        FSGNJX__D = 187,
        FMV__X__D = 188,
        FMV__D__X = 189,
        FEQ__D = 190,
        FLT__D = 191,
        FLE__D = 192,
        FCLASS__D = 193,
        C__FLD = 194,
        C__FSD = 195,
        C__FLDSP = 196,
        C__FSDSP = 197,
        SFENCE__VMA = 198,
        SRET = 199,
        VSETVLI = 200,
        VSETIVLI = 201,
        VSETVL = 202,
        VLE8__V = 203,
        VLE16__V = 204,
        VLE32__V = 205,
        VLE64__V = 206,
        VLSEG2E8__V = 207,
        VLSEG2E16__V = 208,
        VLSEG2E32__V = 209,
        VLSEG2E64__V = 210,
        VLSEG3E8__V = 211,
        VLSEG3E16__V = 212,
        VLSEG3E32__V = 213,
        VLSEG3E64__V = 214,
        VLSEG4E8__V = 215,
        VLSEG4E16__V = 216,
        VLSEG4E32__V = 217,
        VLSEG4E64__V = 218,
        VLSEG5E8__V = 219,
        VLSEG5E16__V = 220,
        VLSEG5E32__V = 221,
        VLSEG5E64__V = 222,
        VLSEG6E8__V = 223,
        VLSEG6E16__V = 224,
        VLSEG6E32__V = 225,
        VLSEG6E64__V = 226,
        VLSEG7E8__V = 227,
        VLSEG7E16__V = 228,
        VLSEG7E32__V = 229,
        VLSEG7E64__V = 230,
        VLSEG8E8__V = 231,
        VLSEG8E16__V = 232,
        VLSEG8E32__V = 233,
        VLSEG8E64__V = 234,
        VSE8__V = 235,
        VSE16__V = 236,
        VSE32__V = 237,
        VSE64__V = 238,
        VSSEG2E8__V = 239,
        VSSEG2E16__V = 240,
        VSSEG2E32__V = 241,
        VSSEG2E64__V = 242,
        VSSEG3E8__V = 243,
        VSSEG3E16__V = 244,
        VSSEG3E32__V = 245,
        VSSEG3E64__V = 246,
        VSSEG4E8__V = 247,
        VSSEG4E16__V = 248,
        VSSEG4E32__V = 249,
        VSSEG4E64__V = 250,
        VSSEG5E8__V = 251,
        VSSEG5E16__V = 252,
        VSSEG5E32__V = 253,
        VSSEG5E64__V = 254,
        VSSEG6E8__V = 255,
        VSSEG6E16__V = 256,
        VSSEG6E32__V = 257,
        VSSEG6E64__V = 258,
        VSSEG7E8__V = 259,
        VSSEG7E16__V = 260,
        VSSEG7E32__V = 261,
        VSSEG7E64__V = 262,
        VSSEG8E8__V = 263,
        VSSEG8E16__V = 264,
        VSSEG8E32__V = 265,
        VSSEG8E64__V = 266,
        VLSE8__V = 267,
        VLSE16__V = 268,
        VLSE32__V = 269,
        VLSE64__V = 270,
        VLSSEG2E8__V = 271,
        VLSSEG2E16__V = 272,
        VLSSEG2E32__V = 273,
        VLSSEG2E64__V = 274,
        VLSSEG3E8__V = 275,
        VLSSEG3E16__V = 276,
        VLSSEG3E32__V = 277,
        VLSSEG3E64__V = 278,
        VLSSEG4E8__V = 279,
        VLSSEG4E16__V = 280,
        VLSSEG4E32__V = 281,
        VLSSEG4E64__V = 282,
        VLSSEG5E8__V = 283,
        VLSSEG5E16__V = 284,
        VLSSEG5E32__V = 285,
        VLSSEG5E64__V = 286,
        VLSSEG6E8__V = 287,
        VLSSEG6E16__V = 288,
        VLSSEG6E32__V = 289,
        VLSSEG6E64__V = 290,
        VLSSEG7E8__V = 291,
        VLSSEG7E16__V = 292,
        VLSSEG7E32__V = 293,
        VLSSEG7E64__V = 294,
        VLSSEG8E8__V = 295,
        VLSSEG8E16__V = 296,
        VLSSEG8E32__V = 297,
        VLSSEG8E64__V = 298,
        VSSE8__V = 299,
        VSSE16__V = 300,
        VSSE32__V = 301,
        VSSE64__V = 302,
        VSSSEG2E8__V = 303,
        VSSSEG2E16__V = 304,
        VSSSEG2E32__V = 305,
        VSSSEG2E64__V = 306,
        VSSSEG3E8__V = 307,
        VSSSEG3E16__V = 308,
        VSSSEG3E32__V = 309,
        VSSSEG3E64__V = 310,
        VSSSEG4E8__V = 311,
        VSSSEG4E16__V = 312,
        VSSSEG4E32__V = 313,
        VSSSEG4E64__V = 314,
        VSSSEG5E8__V = 315,
        VSSSEG5E16__V = 316,
        VSSSEG5E32__V = 317,
        VSSSEG5E64__V = 318,
        VSSSEG6E8__V = 319,
        VSSSEG6E16__V = 320,
        VSSSEG6E32__V = 321,
        VSSSEG6E64__V = 322,
        VSSSEG7E8__V = 323,
        VSSSEG7E16__V = 324,
        VSSSEG7E32__V = 325,
        VSSSEG7E64__V = 326,
        VSSSEG8E8__V = 327,
        VSSSEG8E16__V = 328,
        VSSSEG8E32__V = 329,
        VSSSEG8E64__V = 330,
        VLE8FF__V = 331,
        VLE16FF__V = 332,
        VLE32FF__V = 333,
        VLE64FF__V = 334,
        VLSEG2E8FF__V = 335,
        VLSEG2E16FF__V = 336,
        VLSEG2E32FF__V = 337,
        VLSEG2E64FF__V = 338,
        VLSEG3E8FF__V = 339,
        VLSEG3E16FF__V = 340,
        VLSEG3E32FF__V = 341,
        VLSEG3E64FF__V = 342,
        VLSEG4E8FF__V = 343,
        VLSEG4E16FF__V = 344,
        VLSEG4E32FF__V = 345,
        VLSEG4E64FF__V = 346,
        VLSEG5E8FF__V = 347,
        VLSEG5E16FF__V = 348,
        VLSEG5E32FF__V = 349,
        VLSEG5E64FF__V = 350,
        VLSEG6E8FF__V = 351,
        VLSEG6E16FF__V = 352,
        VLSEG6E32FF__V = 353,
        VLSEG6E64FF__V = 354,
        VLSEG7E8FF__V = 355,
        VLSEG7E16FF__V = 356,
        VLSEG7E32FF__V = 357,
        VLSEG7E64FF__V = 358,
        VLSEG8E8FF__V = 359,
        VLSEG8E16FF__V = 360,
        VLSEG8E32FF__V = 361,
        VLSEG8E64FF__V = 362,
        VSM__V = 363,
        VLM__V = 364,
        VL1RE8__V = 365,
        VL1RE16__V = 366,
        VL1RE32__V = 367,
        VL1RE64__V = 368,
        VL2RE8__V = 369,
        VL2RE16__V = 370,
        VL2RE32__V = 371,
        VL2RE64__V = 372,
        VL4RE8__V = 373,
        VL4RE16__V = 374,
        VL4RE32__V = 375,
        VL4RE64__V = 376,
        VL8RE8__V = 377,
        VL8RE16__V = 378,
        VL8RE32__V = 379,
        VL8RE64__V = 380,
        VS1RE64__V = 381,
        VS2RE64__V = 382,
        VS4RE64__V = 383,
        VS8RE64__V = 384,
        VLOXEI8__V = 385,
        VLOXEI16__V = 386,
        VLOXEI32__V = 387,
        VLOXEI64__V = 388,
        VLOXSEG2EI8__V = 389,
        VLOXSEG2EI16__V = 390,
        VLOXSEG2EI32__V = 391,
        VLOXSEG2EI64__V = 392,
        VLOXSEG3EI8__V = 393,
        VLOXSEG3EI16__V = 394,
        VLOXSEG3EI32__V = 395,
        VLOXSEG3EI64__V = 396,
        VLOXSEG4EI8__V = 397,
        VLOXSEG4EI16__V = 398,
        VLOXSEG4EI32__V = 399,
        VLOXSEG4EI64__V = 400,
        VLOXSEG5EI8__V = 401,
        VLOXSEG5EI16__V = 402,
        VLOXSEG5EI32__V = 403,
        VLOXSEG5EI64__V = 404,
        VLOXSEG6EI8__V = 405,
        VLOXSEG6EI16__V = 406,
        VLOXSEG6EI32__V = 407,
        VLOXSEG6EI64__V = 408,
        VLOXSEG7EI8__V = 409,
        VLOXSEG7EI16__V = 410,
        VLOXSEG7EI32__V = 411,
        VLOXSEG7EI64__V = 412,
        VLOXSEG8EI8__V = 413,
        VLOXSEG8EI16__V = 414,
        VLOXSEG8EI32__V = 415,
        VLOXSEG8EI64__V = 416,
        VSOXEI8__V = 417,
        VSOXEI16__V = 418,
        VSOXEI32__V = 419,
        VSOXEI64__V = 420,
        VSOXSEG2EI8__V = 421,
        VSOXSEG2EI16__V = 422,
        VSOXSEG2EI32__V = 423,
        VSOXSEG2EI64__V = 424,
        VSOXSEG3EI8__V = 425,
        VSOXSEG3EI16__V = 426,
        VSOXSEG3EI32__V = 427,
        VSOXSEG3EI64__V = 428,
        VSOXSEG4EI8__V = 429,
        VSOXSEG4EI16__V = 430,
        VSOXSEG4EI32__V = 431,
        VSOXSEG4EI64__V = 432,
        VSOXSEG5EI8__V = 433,
        VSOXSEG5EI16__V = 434,
        VSOXSEG5EI32__V = 435,
        VSOXSEG5EI64__V = 436,
        VSOXSEG6EI8__V = 437,
        VSOXSEG6EI16__V = 438,
        VSOXSEG6EI32__V = 439,
        VSOXSEG6EI64__V = 440,
        VSOXSEG7EI8__V = 441,
        VSOXSEG7EI16__V = 442,
        VSOXSEG7EI32__V = 443,
        VSOXSEG7EI64__V = 444,
        VSOXSEG8EI8__V = 445,
        VSOXSEG8EI16__V = 446,
        VSOXSEG8EI32__V = 447,
        VSOXSEG8EI64__V = 448,
        VLUXEI8__V = 449,
        VLUXEI16__V = 450,
        VLUXEI32__V = 451,
        VLUXEI64__V = 452,
        VLUXSEG2EI8__V = 453,
        VLUXSEG2EI16__V = 454,
        VLUXSEG2EI32__V = 455,
        VLUXSEG2EI64__V = 456,
        VLUXSEG3EI8__V = 457,
        VLUXSEG3EI16__V = 458,
        VLUXSEG3EI32__V = 459,
        VLUXSEG3EI64__V = 460,
        VLUXSEG4EI8__V = 461,
        VLUXSEG4EI16__V = 462,
        VLUXSEG4EI32__V = 463,
        VLUXSEG4EI64__V = 464,
        VLUXSEG5EI8__V = 465,
        VLUXSEG5EI16__V = 466,
        VLUXSEG5EI32__V = 467,
        VLUXSEG5EI64__V = 468,
        VLUXSEG6EI8__V = 469,
        VLUXSEG6EI16__V = 470,
        VLUXSEG6EI32__V = 471,
        VLUXSEG6EI64__V = 472,
        VLUXSEG7EI8__V = 473,
        VLUXSEG7EI16__V = 474,
        VLUXSEG7EI32__V = 475,
        VLUXSEG7EI64__V = 476,
        VLUXSEG8EI8__V = 477,
        VLUXSEG8EI16__V = 478,
        VLUXSEG8EI32__V = 479,
        VLUXSEG8EI64__V = 480,
        VSUXEI8__V = 481,
        VSUXEI16__V = 482,
        VSUXEI32__V = 483,
        VSUXEI64__V = 484,
        VSUXSEG2EI8__V = 485,
        VSUXSEG2EI16__V = 486,
        VSUXSEG2EI32__V = 487,
        VSUXSEG2EI64__V = 488,
        VSUXSEG3EI8__V = 489,
        VSUXSEG3EI16__V = 490,
        VSUXSEG3EI32__V = 491,
        VSUXSEG3EI64__V = 492,
        VSUXSEG4EI8__V = 493,
        VSUXSEG4EI16__V = 494,
        VSUXSEG4EI32__V = 495,
        VSUXSEG4EI64__V = 496,
        VSUXSEG5EI8__V = 497,
        VSUXSEG5EI16__V = 498,
        VSUXSEG5EI32__V = 499,
        VSUXSEG5EI64__V = 500,
        VSUXSEG6EI8__V = 501,
        VSUXSEG6EI16__V = 502,
        VSUXSEG6EI32__V = 503,
        VSUXSEG6EI64__V = 504,
        VSUXSEG7EI8__V = 505,
        VSUXSEG7EI16__V = 506,
        VSUXSEG7EI32__V = 507,
        VSUXSEG7EI64__V = 508,
        VSUXSEG8EI8__V = 509,
        VSUXSEG8EI16__V = 510,
        VSUXSEG8EI32__V = 511,
        VSUXSEG8EI64__V = 512,
        VADD__VI = 513,
        VADD__VV = 514,
        VADD__VX = 515,
        VSUB__VV = 516,
        VSUB__VX = 517,
        VRSUB__VI = 518,
        VRSUB__VX = 519,
        VWADDU__VV = 520,
        VWADDU__VX = 521,
        VWSUBU__VV = 522,
        VWSUBU__VX = 523,
        VWADD__VV = 524,
        VWADD__VX = 525,
        VWSUB__VV = 526,
        VWSUB__VX = 527,
        VWADDU__WV = 528,
        VWADDU__WX = 529,
        VWSUBU__WV = 530,
        VWSUBU__WX = 531,
        VWADD__WV = 532,
        VWADD__WX = 533,
        VWSUB__WV = 534,
        VWSUB__WX = 535,
        VZEXT__VF2 = 536,
        VSEXT__VF2 = 537,
        VZEXT__VF4 = 538,
        VSEXT__VF4 = 539,
        VZEXT__VF8 = 540,
        VSEXT__VF8 = 541,
        VADC__VVM = 542,
        VADC__VXM = 543,
        VADC__VIM = 544,
        VMADC__VVM = 545,
        VMADC__VXM = 546,
        VMADC__VIM = 547,
        VMADC__VV = 548,
        VMADC__VX = 549,
        VMADC__VI = 550,
        VSBC__VVM = 551,
        VSBC__VXM = 552,
        VMSBC__VVM = 553,
        VMSBC__VXM = 554,
        VMSBC__VV = 555,
        VMSBC__VX = 556,
        VAND__VI = 557,
        VAND__VV = 558,
        VAND__VX = 559,
        VOR__VI = 560,
        VOR__VV = 561,
        VOR__VX = 562,
        VXOR__VI = 563,
        VXOR__VV = 564,
        VXOR__VX = 565,
        VSLL__VI = 566,
        VSLL__VV = 567,
        VSLL__VX = 568,
        VSRL__VI = 569,
        VSRL__VV = 570,
        VSRL__VX = 571,
        VSRA__VI = 572,
        VSRA__VV = 573,
        VSRA__VX = 574,
        VNSRL__WI = 575,
        VNSRL__WV = 576,
        VNSRL__WX = 577,
        VNSRA__WI = 578,
        VNSRA__WV = 579,
        VNSRA__WX = 580,
        VMSEQ__VI = 581,
        VMSEQ__VV = 582,
        VMSEQ__VX = 583,
        VMSNE__VI = 584,
        VMSNE__VV = 585,
        VMSNE__VX = 586,
        VMSLTU__VV = 587,
        VMSLTU__VX = 588,
        VMSLT__VV = 589,
        VMSLT__VX = 590,
        VMSLEU__VI = 591,
        VMSLEU__VV = 592,
        VMSLEU__VX = 593,
        VMSLE__VI = 594,
        VMSLE__VV = 595,
        VMSLE__VX = 596,
        VMSGTU__VI = 597,
        VMSGTU__VX = 598,
        VMSGT__VI = 599,
        VMSGT__VX = 600,
        VMINU__VV = 601,
        VMINU__VX = 602,
        VMIN__VV = 603,
        VMIN__VX = 604,
        VMAXU__VV = 605,
        VMAXU__VX = 606,
        VMAX__VV = 607,
        VMAX__VX = 608,
        VMUL__VV = 609,
        VMUL__VX = 610,
        VMULH__VV = 611,
        VMULH__VX = 612,
        VMULHU__VV = 613,
        VMULHU__VX = 614,
        VMULHSU__VV = 615,
        VMULHSU__VX = 616,
        VDIVU__VV = 617,
        VDIVU__VX = 618,
        VDIV__VV = 619,
        VDIV__VX = 620,
        VREMU__VV = 621,
        VREMU__VX = 622,
        VREM__VV = 623,
        VREM__VX = 624,
        VWMUL__VV = 625,
        VWMUL__VX = 626,
        VWMULU__VV = 627,
        VWMULU__VX = 628,
        VWMULSU__VV = 629,
        VWMULSU__VX = 630,
        VMACC__VV = 631,
        VMACC__VX = 632,
        VNMSAC__VV = 633,
        VNMSAC__VX = 634,
        VMADD__VV = 635,
        VMADD__VX = 636,
        VNMSUB__VV = 637,
        VNMSUB__VX = 638,
        VWMACCU__VV = 639,
        VWMACCU__VX = 640,
        VWMACC__VV = 641,
        VWMACC__VX = 642,
        VWMACCSU__VV = 643,
        VWMACCSU__VX = 644,
        VWMACCUS__VX = 645,
        VMERGE__VIM = 646,
        VMERGE__VVM = 647,
        VMERGE__VXM = 648,
        VMV__V__I = 649,
        VMV__V__V = 650,
        VMV__V__X = 651,
        VSADDU__VI = 652,
        VSADDU__VV = 653,
        VSADDU__VX = 654,
        VSADD__VI = 655,
        VSADD__VV = 656,
        VSADD__VX = 657,
        VSSUBU__VV = 658,
        VSSUBU__VX = 659,
        VSSUB__VV = 660,
        VSSUB__VX = 661,
        VAADDU__VV = 662,
        VAADDU__VX = 663,
        VAADD__VV = 664,
        VAADD__VX = 665,
        VASUBU__VV = 666,
        VASUBU__VX = 667,
        VASUB__VV = 668,
        VASUB__VX = 669,
        VSMUL__VV = 670,
        VSMUL__VX = 671,
        VSSRL__VI = 672,
        VSSRL__VV = 673,
        VSSRL__VX = 674,
        VSSRA__VI = 675,
        VSSRA__VV = 676,
        VSSRA__VX = 677,
        VNCLIPU__WI = 678,
        VNCLIPU__WV = 679,
        VNCLIPU__WX = 680,
        VNCLIP__WI = 681,
        VNCLIP__WV = 682,
        VNCLIP__WX = 683,
        VREDSUM__VS = 684,
        VREDMAXU__VS = 685,
        VREDMAX__VS = 686,
        VREDMINU__VS = 687,
        VREDMIN__VS = 688,
        VREDAND__VS = 689,
        VREDOR__VS = 690,
        VREDXOR__VS = 691,
        VWREDSUMU__VS = 692,
        VWREDSUM__VS = 693,
        VFREDOSUM__VS = 694,
        VFREDUSUM__VS = 695,
        VFREDMAX__VS = 696,
        VFREDMIN__VS = 697,
        VFWREDOSUM__VS = 698,
        VFWREDUSUM__VS = 699,
        VMAND__MM = 700,
        VMNAND__MM = 701,
        VMANDN__MM = 702,
        VMXOR__MM = 703,
        VMOR__MM = 704,
        VMNOR__MM = 705,
        VMORN__MM = 706,
        VMXNOR__MM = 707,
        VCPOP__M = 708,
        VFIRST__M = 709,
        VMSBF__M = 710,
        VMSIF__M = 711,
        VMSOF__M = 712,
        VIOTA__M = 713,
        VID__V = 714,
        VMV__S__X = 715,
        VMV__X__S = 716,
        VSLIDEUP__VI = 717,
        VSLIDEUP__VX = 718,
        VSLIDEDOWN__VI = 719,
        VSLIDEDOWN__VX = 720,
        VSLIDE1UP__VX = 721,
        VSLIDE1DOWN__VX = 722,
        VRGATHER__VI = 723,
        VRGATHER__VV = 724,
        VRGATHER__VX = 725,
        VRGATHEREI16__VV = 726,
        VCOMPRESS__VM = 727,
        VMV1R__V = 728,
        VMV2R__V = 729,
        VMV4R__V = 730,
        VMV8R__V = 731,
        VFMV__S__F = 732,
        VFMV__F__S = 733,
        VFSLIDE1UP__VF = 734,
        VFSLIDE1DOWN__VF = 735,
        VFADD__VF = 736,
        VFADD__VV = 737,
        VFSUB__VF = 738,
        VFSUB__VV = 739,
        VFRSUB__VF = 740,
        VFWADD__VF = 741,
        VFWADD__VV = 742,
        VFWSUB__VF = 743,
        VFWSUB__VV = 744,
        VFWADD__WF = 745,
        VFWADD__WV = 746,
        VFWSUB__WF = 747,
        VFWSUB__WV = 748,
        VFMUL__VF = 749,
        VFMUL__VV = 750,
        VFDIV__VF = 751,
        VFDIV__VV = 752,
        VFRDIV__VF = 753,
        VFWMUL__VF = 754,
        VFWMUL__VV = 755,
        VFMACC__VF = 756,
        VFMACC__VV = 757,
        VFNMACC__VF = 758,
        VFNMACC__VV = 759,
        VFMSAC__VF = 760,
        VFMSAC__VV = 761,
        VFNMSAC__VF = 762,
        VFNMSAC__VV = 763,
        VFMADD__VF = 764,
        VFMADD__VV = 765,
        VFNMADD__VF = 766,
        VFNMADD__VV = 767,
        VFMSUB__VF = 768,
        VFMSUB__VV = 769,
        VFNMSUB__VF = 770,
        VFNMSUB__VV = 771,
        VFWMACC__VF = 772,
        VFWMACC__VV = 773,
        VFWNMACC__VF = 774,
        VFWNMACC__VV = 775,
        VFWMSAC__VF = 776,
        VFWMSAC__VV = 777,
        VFWNMSAC__VF = 778,
        VFWNMSAC__VV = 779,
        VFSQRT__V = 780,
        VFRSQRT7__V = 781,
        VFREC7__V = 782,
        VFMIN__VF = 783,
        VFMIN__VV = 784,
        VFMAX__VF = 785,
        VFMAX__VV = 786,
        VFSGNJ__VF = 787,
        VFSGNJ__VV = 788,
        VFSGNJN__VF = 789,
        VFSGNJN__VV = 790,
        VFSGNJX__VF = 791,
        VFSGNJX__VV = 792,
        VMFEQ__VF = 793,
        VMFEQ__VV = 794,
        VMFNE__VF = 795,
        VMFNE__VV = 796,
        VMFLT__VF = 797,
        VMFLT__VV = 798,
        VMFLE__VF = 799,
        VMFLE__VV = 800,
        VMFGT__VF = 801,
        VMFGE__VF = 802,
        VFCLASS__V = 803,
        VFMERGE__VFM = 804,
        VFMV__V__F = 805,
        VFCVT__XU__F__V = 806,
        VFCVT__X__F__V = 807,
        VFCVT__RTZ__XU__F__V = 808,
        VFCVT__RTZ__X__F__V = 809,
        VFCVT__F__XU__V = 810,
        VFCVT__F__X__V = 811,
        VFWCVT__XU__F__V = 812,
        VFWCVT__X__F__V = 813,
        VFWCVT__RTZ__XU__F__V = 814,
        VFWCVT__RTZ__X__F__V = 815,
        VFWCVT__F__XU__V = 816,
        VFWCVT__F__X__V = 817,
        VFWCVT__F__F__V = 818,
        VFNCVT__X__F__W = 819,
        VFNCVT__XU__F__W = 820,
        VFNCVT__RTZ__XU__F__W = 821,
        VFNCVT__RTZ__X__F__W = 822,
        VFNCVT__F__XU__W = 823,
        VFNCVT__F__X__W = 824,
        VFNCVT__F__F__W = 825,
        VFNCVT__ROD__F__F__W = 826,
        MAX_OPCODE
    };
};
}
}            
#endif /* _RV64GCV_H_ */
// clang-format on
